# This workflow is written specifically for Jam3/nextjs-boilerplate
# It uploads all contents inside the ./out/ folder generated on build:prod:static process to an AWS S3 account

name: Deploy to S3 Bucket

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_SESSION_TOKEN:
        required: true
      S3_ORIGIN_BUCKET:
        required: true
  push: 
    branches:
      - main
  workflow_dispatch:
env:
  TERRAFORM_WORKING_DIR: "terraform"
  TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
  TF_VAR_aws_region: ${{vars.AWS_REGION}}
  TF_VAR_aws_profile: ${{vars.AWS_PROFILE}}
  TF_VAR_aws_s3_bucket_name: ${{vars.AWS_S3_BUCKET_NAME}}

jobs:
  create-s3-bucket:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        terraform_version: ["1.9.1"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform destroy
        id: destroy
        run: terraform destroy

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: ${{env.TERRAFORM_WORKING_DIR}}
      
  build:
    needs: [create-s3-bucket]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Update NPM
        run: npm install -g npm@8

      - name: Install dependencies
        run: npm ci

      - name: Build NextJS static site
        run: ./.github/scripts/build.sh
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{secrets.AWS_DEFAULT_REGION}}

      - name: Deploy
        run: ./.github/scripts/deploy.sh ${{vars.AWS_S3_BUCKET_NAME}}
        shell: bash